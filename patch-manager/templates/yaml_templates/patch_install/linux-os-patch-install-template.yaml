AWSTemplateFormatVersion: '2010-09-09'
Description: AWS SSM Patch Manager - Project Root#
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Project Information Parameter
        Parameters:
          - AWSAccountID
          - AccountOwner
          - ProjectName
          - Environment
          - RequestID
          - ApproverName
      - Label:
          default: Recommended - Patch Config Details
        Parameters:
          - PatchGroupName
          - OperatingSystem
          - LinuxPatchClassification
          - LinuxPatchSeverity
          - PatchScanMaintainanceWindowTime
          - PatchScanMaintainanceWindowDayOfWeek
      - Label:
          default: Recommended Mandetory Fields
        Parameters:
          - ScheduleTimezone
          - RejectedPatches
          - NotificationEmailAddress
Parameters:
  AWSAccountID:
    Description: AWS Account ID of this Resources
    Type: String
    Default: '123456789'
  AccountOwner:
    Description: AWS Accont Owner of this Resources
    Type: String
    Default: Chaitanya
  ProjectName:
    Description: Client Project Name
    Type: String
    Default: demo
  Environment:
    Description: Envoironment Name of Resource (ex. dev, stage, production)
    Type: String
    Default: dev
  RequestID:
    Description: Request ID of Task for this Resource
    Type: String
    Default: '123456'
  ApproverName:
    Description: Approver Name for this Resource
    Type: String
    Default: Chaitanya
  PatchInstallMaintenanceWindowTime:
    Description: Patch Install MaintainanceWindow (MINUTE HOUR) eg. (00 09) -- 9:00 AM
    Type: String
    Default: 00 09
    MinLength: '1'
    ConstraintDescription: PatchInstallMaintenanceWindowTime is Mandetory field to procced futher
  PatchInstallMaintainanceWindowDayOfWeek:
    Description: MaintainanceWindow Day of teh Week eg. (MON, TUE, WED, THU, FRI, SAT, SUN). Select * for Daily Execution
    Type: String
    Default: SAT
    AllowedValues:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
      - '*'
    MinLength: '1'
    ConstraintDescription: MaintainanceWindowTime is Mandetory field to procced futher
  OperatingSystem:
    Description: Server Operating System
    Type: String
    AllowedValues:
      - AMAZON_LINUX_2022
      - AMAZON_LINUX_2023
    MinLength: '1'
    ConstraintDescription: OperatingSystem is an Mandtory Field to Proceed Further
  PatchClassification:
    Description: Patching Classification for System (Supported Values - { use * for All} Security, Bugfix, Enhancement, Recommended, Newpackage)
    Type: String
    Default: '*'
  RejectedPatches:
    Description: Rejects Patches Name with Comma
    Type: String
    Default: ''
  PatchSeverity:
    Description: Patching Severity for Linux Operating System (Supported Values - Critical, Important, Medium, Low)
    Type: String
    Default: '*'
  PatchGroupName:
    Description: Patching Tag Value (Intance Specfied with key - PatchGroup)
    Type: String
    Default: LinuxOS-PatchInstall
    AllowedValues:
      - LinuxOS-PatchInstall
  ScheduleTimezone:
    Description: Patching Schedule time zone
    Type: String
    Default: Etc/UTC
    AllowedValues:
      - Etc/UTC
  NotificationEmailAddress:
    Description: Notification Email Address for SNS Topic
    Type: String
    MinLength: '1'
    ConstraintDescription: NotificationEmailAddress is an Mandtory Field to Proceed Further
Conditions:
  IsAmazonLinux2022: !Equals
    - !Ref OperatingSystem
    - AMAZON_LINUX_2022
  IsAmazonLinux2023: !Equals
    - !Ref OperatingSystem
    - AMAZON_LINUX_2023
  HasRejectedPatches: !Not
    - !Equals
      - !Ref RejectedPatches
      - ''
Resources:
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Join
        - '-'
        - - Patch
          - Install
          - !Ref Environment
          - !Ref ProjectName
          - !Ref OperatingSystem
          - SNSTopic
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - Patch
              - Install
              - !Ref Environment
              - !Ref ProjectName
              - !Ref OperatingSystem
              - SNSTopic
        - Key: Environment
          Value: !Ref Environment
        - Key: AWSAccountID
          Value: !Ref AWSAccountID
        - Key: AccountOwner
          Value: !Ref AccountOwner
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: RequestID
          Value: !Ref RequestID
        - Key: ApproverName
          Value: !Ref ApproverName
        - Key: StackName
          Value: !Ref AWS::StackName
  NotificationTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref NotificationEmailAddress
      Protocol: Email
      TopicArn: !Ref NotificationTopic
  PatchExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - '-'
        - - Patch
          - Install
          - !Ref Environment
          - !Ref ProjectName
          - !Ref OperatingSystem
          - IAMRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ssm.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Join
            - '-'
            - - Patch
              - Install
              - !Ref Environment
              - !Ref ProjectName
              - !Ref OperatingSystem
              - IAMPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:SendCommand
                  - ssm:DescribeInstanceInformation
                  - ssm:GetDocument
                  - ssm:ListCommands
                  - ssm:ListCommandInvocations
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                  - sns:Publish
                  - iam:PassRole
                Resource: '*'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - Patch
              - Install
              - !Ref Environment
              - !Ref ProjectName
              - !Ref OperatingSystem
              - IAMRole
        - Key: Environment
          Value: !Ref Environment
        - Key: AWSAccountID
          Value: !Ref AWSAccountID
        - Key: AccountOwner
          Value: !Ref AccountOwner
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: RequestID
          Value: !Ref RequestID
        - Key: ApproverName
          Value: !Ref ApproverName
        - Key: StackName
          Value: !Ref AWS::StackName
  LinuxPatchInstallBaseLine:
    Type: AWS::SSM::PatchBaseline
    Properties:
      Name: !Join
        - '-'
        - - Patch
          - Install
          - !Ref Environment
          - !Ref ProjectName
          - !Ref OperatingSystem
          - PatchBaseLine
      Description: !Join
        - '-'
        - - Patch
          - Install
          - PatchBaseline for
          - !Ref Environment
          - !Ref ProjectName
          - !Ref OperatingSystem
      OperatingSystem: !Ref OperatingSystem
      RejectedPatchesAction: BLOCK
      RejectedPatches: !If
        - HasRejectedPatches
        - !Split
          - ','
          - !Ref RejectedPatches
        - !Ref AWS::NoValue
      PatchGroups:
        - !Ref PatchGroupName
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: 0
            ComplianceLevel: UNSPECIFIED
            EnableNonSecurity: true
            PatchFilterGroup:
              PatchFilters:
                - Key: PRODUCT
                  Values:
                    - !If
                      - IsAmazonLinux2022
                      - AmazonLinux2022
                      - !If
                        - IsAmazonLinux2023
                        - AmazonLinux2023
                        - 'null'
                - Key: CLASSIFICATION
                  Values: !Split
                    - ','
                    - !Ref PatchClassification
                - Key: SEVERITY
                  Values: !Split
                    - ','
                    - !Ref PatchSeverity
      ApprovedPatchesComplianceLevel: UNSPECIFIED
      ApprovedPatchesEnableNonSecurity: true
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - Patch
              - Install
              - !Ref Environment
              - !Ref ProjectName
              - !Ref OperatingSystem
              - PatchBaseLine
        - Key: Environment
          Value: !Ref Environment
        - Key: AWSAccountID
          Value: !Ref AWSAccountID
        - Key: AccountOwner
          Value: !Ref AccountOwner
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: RequestID
          Value: !Ref RequestID
        - Key: ApproverName
          Value: !Ref ApproverName
        - Key: StackName
          Value: !Ref AWS::StackName
  PatchInstallMaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      Name: !Join
        - '-'
        - - Patch
          - Install
          - !Ref Environment
          - !Ref ProjectName
          - !Ref OperatingSystem
          - MaintenanceWindow
      Schedule: !Sub cron(${PatchInstallMaintenanceWindowTime} ? * ${PatchInstallMaintainanceWindowDayOfWeek} * )
      Duration: 2
      Cutoff: 1
      AllowUnassociatedTargets: false
      ScheduleTimezone: !Ref ScheduleTimezone
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - Patch
              - Install
              - !Ref Environment
              - !Ref ProjectName
              - !Ref OperatingSystem
              - MaintenanceWindow
        - Key: Environment
          Value: !Ref Environment
        - Key: AWSAccountID
          Value: !Ref AWSAccountID
        - Key: AccountOwner
          Value: !Ref AccountOwner
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: RequestID
          Value: !Ref RequestID
        - Key: ApproverName
          Value: !Ref ApproverName
        - Key: StackName
          Value: !Ref AWS::StackName
  PatchInstallMaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      WindowId: !Ref PatchInstallMaintenanceWindow
      ResourceType: INSTANCE
      Targets:
        - Key: tag:PatchGroup
          Values:
            - !Ref PatchGroupName
        - Key: tag:Environment
          Values:
            - !Ref Environment
      OwnerInformation: Patch Install MaintainanceWindow Target for Instance
  PatchInstallMaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      Priority: 1
      MaxConcurrency: '1'
      MaxErrors: '1'
      WindowId: !Ref PatchInstallMaintenanceWindow
      TaskArn: AWS-RunPatchBaseline
      ServiceRoleArn: !GetAtt PatchExecutionRole.Arn
      Targets:
        - Key: WindowTargetIds
          Values:
            - !Ref PatchInstallMaintenanceWindowTarget
      TaskType: RUN_COMMAND
      TaskInvocationParameters:
        MaintenanceWindowRunCommandParameters:
          Parameters:
            Operation:
              - Install
          CloudWatchOutputConfig:
            CloudWatchLogGroupName: !Ref PatchInstallLogGroup
            CloudWatchOutputEnabled: true
          NotificationConfig:
            NotificationArn: !Ref NotificationTopic
            NotificationEvents:
              - All
            NotificationType: Command
          ServiceRoleArn: !GetAtt PatchExecutionRole.Arn
  PatchInstallLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - /
        - - /aws/ssm/
          - !Ref Environment
          - !Ref ProjectName
          - !Ref OperatingSystem
          - PatchInstall
          - OperationLogs
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Join
            - /
            - - /aws/ssm/
              - !Ref Environment
              - !Ref ProjectName
              - !Ref OperatingSystem
              - PatchInstall
              - OperationLogs
        - Key: Environment
          Value: !Ref Environment
        - Key: AWSAccountID
          Value: !Ref AWSAccountID
        - Key: AccountOwner
          Value: !Ref AccountOwner
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: RequestID
          Value: !Ref RequestID
        - Key: ApproverName
          Value: !Ref ApproverName
        - Key: StackName
          Value: !Ref AWS::StackName
  PatchLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - '-'
        - - Patch
          - Install
          - !Ref Environment
          - !Ref ProjectName
          - IAMRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PatchLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:DescribePatchBaselines
                  - ssm:UpdatePatchBaseline
                  - ssm:DescribeMaintenanceWindows
                  - ssm:DescribeMaintenanceWindowTargets
                  - ssm:UpdateMaintenanceWindowTarget
                  - s3:GetObject
                  - s3:ListBucket
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListObject
                  - s3:ListBucket
                Resource: !Sub arn:aws:s3:::${ProjectName}-${Environment}-linux-patch-install-s3-bucket/*
  PatchS3Bucket:
    DependsOn:
      - PatchLambdaFunction
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - '-'
        - - !Ref ProjectName
          - !Ref Environment
          - linux-patch-install-s3-bucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Function: !GetAtt PatchLambdaFunction.Arn
  LambdaInvokePermission:
    DependsOn:
      - PatchLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PatchLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${ProjectName}-${Environment}-linux-patch-install-s3-bucket
  PatchLambdaFunction:
    DependsOn:
      - PatchLambdaExecutionRole
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Join
        - '-'
        - - Patch
          - Install
          - !Ref ProjectName
          - !Ref Environment
          - !Ref OperatingSystem
          - function
      Handler: index.lambda_handler
      Role: !GetAtt PatchLambdaExecutionRole.Arn
      Code:
        ZipFile: !Join
          - ''
          - - |
              import boto3
            - |
              import json
            - |
              import logging
            - |
              import os
            - |+
            - |
              # Configure logging
            - |
              logging.basicConfig(level=logging.INFO)
            - |
              logger = logging.getLogger()
            - |+
            - |
              def lambda_handler(event, context):
            - |2
                  s3 = boto3.client('s3')
            - |2
                  ssm = boto3.client('ssm')
            - |2
                  bucket_name = os.environ['PATCH_S3_BUCKET']
            - |2
                  file_key = 'patch-exclusions.json'
            - |2
            - |2
                  response = s3.get_object(Bucket=bucket_name, Key=file_key)
            - |2
                  patch_info = json.loads(response['Body'].read().decode('utf-8'))
            - |2
                  logger.info('Successfully fetched patch exclusions from S3')
            - |2
            - |2
                  # If instance_id is passed via event, use it
            - |2
                  if 'instance_id' in event:
            - |2
                      instance_id = event['instance_id']
            - |2
                  else:
            - |2
                      # If instance_id is not passed in event, try to extract it from the S3 data
            - |2
                      if len(patch_info.keys()) == 1:
            - |2
                          instance_id = list(patch_info.keys())[0]
            - |2
                      else:
            - |2
                          logger.error('Missing instance_id in event data and cannot infer it from S3 file')
            - |2
                          return {
            - |2
                              'statusCode': 400,
            - |2
                              'body': 'Missing instance_id in event data and cannot infer it from S3 file'
            - |2
                          }
            - |2
            - |2
                  patches_to_exclude = patch_info.get(instance_id, {}).get('exclude_patches', [])
            - |2
                  maintenance_window_cron = patch_info.get(instance_id, {}).get('maintenance_window', None)
            - |2
            - |2
                  if not patches_to_exclude:
            - |2
                      logger.info(f'No patches to exclude for instance {instance_id}')
            - |2
                      return {
            - |2
                          'statusCode': 400,
            - |2
                          'body': f'No patches to exclude for instance {instance_id}'
            - |2
                      }
            - |2
            - |2
                  response = ssm.describe_patch_baselines(
            - |2
                      Filters=[
            - |2
                          {
            - |2
                              'Key': 'NAME_PREFIX',
            - |2
                              'Values': [os.environ['PATCH_BASELINE_NAME']]
            - |2
                          }
            - |2
                      ]
            - |2
                  )
            - |2
                  patch_baseline_id = response['BaselineIdentities'][0]['BaselineId']
            - |2
                  ssm.update_patch_baseline(
            - |2
                      BaselineId=patch_baseline_id,
            - |2
                      RejectedPatches=patches_to_exclude
            - |2
                  )
            - |2
                  logger.info(f'Updated patch baseline {patch_baseline_id} with patches to exclude for instance {instance_id}')
            - |2
            - |2
                  maintenance_window_id = os.environ['MAINTAINANCE_WINDOW_ID']
            - |2
                  target_id = os.environ['MAINTAINANCE_WINDOW_TARGET_ID']
            - |2
            - |2
                  ssm.update_maintenance_window_target(
            - |2
                      WindowId=maintenance_window_id,
            - |2
                      WindowTargetId=target_id,
            - |2
                      Targets=[
            - |2
                          {
            - |2
                              'Key': 'InstanceIds',
            - |2
                              'Values': [instance_id]
            - |2
                          }
            - |2
                      ]
            - |2
                  )
            - |2
                  logger.info(f'Updated maintenance window target {target_id} for instance {instance_id}')
            - |2
            - |2
                  return {
            - |2
                      'statusCode': 200,
            - |2
                      'body': f'Updated patch baseline {patch_baseline_id} and maintenance window target {target_id} for instance {instance_id}'
            - |2
                  }
      Runtime: python3.9
      Timeout: 300
      Environment:
        Variables:
          PATCH_S3_BUCKET: !Join
            - '-'
            - - !Ref ProjectName
              - !Ref Environment
              - linux-patch-install-s3-bucket
          PATCH_BASELINE_NAME: !Join
            - '-'
            - - Patch
              - Install
              - !Ref Environment
              - !Ref ProjectName
              - !Ref OperatingSystem
              - PatchBaseLine
          MAINTAINANCE_WINDOW_ID: !Ref PatchInstallMaintenanceWindow
          MAINTAINANCE_WINDOW_TARGET_ID: !Ref PatchInstallMaintenanceWindowTarget